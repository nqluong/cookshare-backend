package com.backend.cookshare.recipe_management.dto;

import com.backend.cookshare.recipe_management.enums.Difficulty;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import lombok.*;
import lombok.experimental.FieldDefaults;

import java.util.List;
import java.util.UUID;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@FieldDefaults(level = AccessLevel.PRIVATE)
public class RecipeRequest {

    @NotNull(message = "userId khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng")
    UUID userId;

    @NotBlank(message = "title khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng")
    String title;

    @NotBlank(message = "description khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng")
    String description;

    @PositiveOrZero(message = "prepTime pháº£i >= 0")
    Integer prepTime;

    @PositiveOrZero(message = "cookTime pháº£i >= 0")
    Integer cookTime;

    @Positive(message = "servings pháº£i > 0")
    Integer servings;

    Difficulty difficulty;

    String featuredImage;

    // ğŸ”¥ ThÃªm danh sÃ¡ch nguyÃªn liá»‡u
    @Valid
    @NotEmpty(message = "Pháº£i cÃ³ Ã­t nháº¥t 1 nguyÃªn liá»‡u")
    List<RecipeIngredientRequest> ingredients;

    // ğŸ”¥ ThÃªm danh sÃ¡ch bÆ°á»›c náº¥u
    @Valid
    @NotEmpty(message = "Pháº£i cÃ³ Ã­t nháº¥t 1 bÆ°á»›c náº¥u Äƒn")
    List<RecipeStepRequest> steps;

    // ğŸ”¥ ThÃªm tag + category
    List<UUID> tagIds;
    List<UUID> categoryIds;

    Boolean isPublished;
    Boolean isFeatured;

    String notes;
    String nutritionInfo;

    String metaKeywords;
    String seasonalTags;
}
